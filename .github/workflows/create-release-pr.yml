name: Create Release PR

on:
  workflow_dispatch: {}
  push:
    branches:
      - develop

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: create-release-pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create_release_pr:
    runs-on: ubuntu-22.04
    if: ${{ github.actor != 'github-actions[bot]' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: pnpm

      - name: Install dependencies
        run: |
          cd lib/functions/assets-cleanup && pnpm install --frozen-lockfile && pnpm install-layer && cd ../../..
          cd lib/functions/access-logs-analysis/group-by-date && pnpm install --frozen-lockfile && pnpm install-layer && cd ../../../..
          cd lib/functions/access-logs-analysis/partitioning && pnpm install --frozen-lockfile && pnpm install-layer && cd ../../../..
          pnpm install --frozen-lockfile

      - name: Ensure next free version
        id: ensure_version
        run: |
          set -euo pipefail
          git fetch --tags --force --prune
          PKG=$(node -p "require('./package.json').name")
          CUR=$(node -p "require('./package.json').version")
          echo "current version: $CUR"
          if git rev-parse "v${CUR}" >/dev/null 2>&1; then
            pnpm version patch --no-git-tag-version
          fi
          TARGET=$(node -p "require('./package.json').version")
          while pnpm view ${PKG}@${TARGET} version --registry=https://registry.npmjs.org/ >/dev/null 2>&1; do
            pnpm version patch --no-git-tag-version
            TARGET=$(node -p "require('./package.json').version")
          done
          echo "version=${TARGET}" >> $GITHUB_OUTPUT

      - name: Generate changelog and commit changes (local)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          pnpm changelogen --release
          # commit any changes created by changelogen (package.json, CHANGELOG.md, ...)
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore(release): v$(node -p \"require('./package.json').version\")" || true
          else
            echo "No changelog/package changes to commit."
          fi

      - name: Create Release PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(release): v${{ steps.ensure_version.outputs.version }}"
          title: "chore(release): v${{ steps.ensure_version.outputs.version }}"
          body: "Automated release PR for v${{ steps.ensure_version.outputs.version }}. Please review and merge."
          base: master
          branch: release/v${{ steps.ensure_version.outputs.version }}
          labels: release
